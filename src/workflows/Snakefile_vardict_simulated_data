#!python
# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

configfile: "../config_files/config_simulated_data.json"

rule_dir = "../"

include:
  rule_dir + "snakemake_rules/ref_prepare/genome_fa.rule"
include:
  rule_dir + "snakemake_rules/quality_control/fastqc.rule"
include:
  rule_dir + "snakemake_rules/quality_control/cutadapt.rule"
include:
  rule_dir + "snakemake_rules/align/bwa_mem.rule"
include:
  rule_dir + "snakemake_rules/align/samtools.rules"
include:
  rule_dir + "snakemake_rules/quality_control/remove_duplicate.rule"
include:
  rule_dir + "snakemake_rules/variant_calling/vardict.rule"
include:
  rule_dir + "snakemake_rules/quality_control/sambamba_depth.rule"
include:
  rule_dir + "snakemake_rules/quality_control/GATK.rules"


rule all:
  input:
    expand(config["path"]["genomefa"]+config["references"]["genomefa"]+".{prefix}", prefix=["amb","ann","bwt","pac","sa"]),
    expand(config["path"]["fastq"] + "{sample}.bwa.read1.ca.fastq", sample=config["fastq"]),
    expand(config["path"]["fastq"] + "{sample}.bwa.read2.ca.fastq", sample=config["fastq"]),
    expand(config["path"]["fastq"] + "{sample}.bwa.read1_fastqc.zip", sample=config["fastq"]),
    expand(config["path"]["fastq"] + "{sample}.bwa.read2_fastqc.zip", sample=config["fastq"]),
    expand(config["path"]["bamout"] + "{sample}.bam", sample=config["fastq"])
    #expand(config["path"]["bamout"] + "{sample}.sorted.bam", sample=config["samples"]),
    #expand(config["path"]["bamout"] + "{sample}.sorted.rmdup.bam", sample=config["samples"]),
    #config["path"]["bamout"] + "All.merged.bed",
    #expand(config["path"]["bamout"] + "{sample}.sorted.rmdup.cov.bed", sample=config["samples"]),
    #expand(config["path"]["bamout"] + "{sample}.sorted.rmdup.bsrcl.bam", sample=config["samples"]),
    #expand(config["path"]["bamout"] + "{sample}.sorted.rmdup.bsrcl", sample=config["samples"]),
    #config["path"]["variantcaller"]+config["vcf"]["vardict"],

